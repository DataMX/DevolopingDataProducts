fit2 <- lm(count ~ spray, spray2)
spray2
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
((fit$coef[2]) - (fit$coef[3]) )/ 1.6011
(fit$coef[2] - fit$coef[3] )/ 1.6011
dim(hunger)
13
948
names(hunger)
fit <- lm(Numeric~Year, hunger)
summary(fit)$coef
lmF <- lm(numeric[hunger$Sex=="Female"] ~ Year, hunger)
lmF <- lm(Numeric[hunger$Sex=="Female"] ~ Year[hunger$Sex=="Female"], hunger)
lmF <- lm(Numeric[hunger$Sex=="Male"] ~ Year[hunger$Sex=="Male"], hunger)
lmM <- lm(Numeric[hunger$Sex=="Male"] ~ Year[hunger$Sex=="Male"], hunger)
lmBoth <- lm (Numeric ~ Year + Sex)
lmBoth <- lm (Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric~Year+ Sex + Sex*Year, hunger)
summary (lmInter)
fit <- lm(y~x, out2)
plot(fit, which = 1)
fitno <- lm(y~x, out2[-1,])
plot(fitno, which = 1)
coef(fit)-coef(fitno)
View(dfbeta(fit))
resno <- out2[1,"y"] - redict(fitno, out21,])
resno <- out2[1,"y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
View(hatvalues(fit))
sigma <- (fit4deviance/
4
)
sigma <- (sum(fit$residuals^2)
)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit))
)
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/sigma*sqrt(1-hatvalues(fit)[1]
)
resid(fit)[1]/sigma1*sqrt(1-hatvalues(fit)[1]))
resid(fit)[1]/sigma1*sqrt(1-hatvalues(fit)[1])
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
View(rsudent(fit))
View(rstudent(fit))
dy <- predict(fitno, out2) - predict (fit, out2)
sum(dy)^2 / 2* sigma^2
sum(dy^2) / 2* sigma^2
sum(dy^2) / (2* sigma^2)
plot(fit, which =5)
rgp1()
rgp2()
head (swiss)
mdl <- (Fertility ~. , swiss)
mdl <- lm(Fertility ~. , swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, swiss)
vif(mdl2)
xic <- simbias()
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1,fit3)
deviance(fit2)
deviance(fit3)
d <- deviance(fit3)/43
n <- deviance(fit1)-deviance(fit3)/2
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 42, lower.tail = FALSE)
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test9fit3$residuals)
shapiro.test(fit3$residuals)
anova(fit1,fit2,fit5,fit6)
anova(fit1,fit3,fit5,fit6)
lm(mpg ~ cylinder + weight)
lm(mpg ~ cylinder + weight, mtcars)
mtcars
lm(mpg ~ cyl + wt, mtcars)
lm(mpg[cyl!= "6"] ~ cyl [cyl!= "6"] + wt[cyl!= "6"], mtcars )
lm(mpg[cyl!= "6"] ~ factor(cyl [cyl!= "6"]) + wt[cyl!= "6"], mtcars )
lm(mpg[cyl!= "6"] ~ factor(cyl [cyl!= "6"]), mtcars )
mtcars2 <- mtcars[cyl!= "6]
mtcars2 <- mtcars[cyl!= "6"]
mtcars2 <- mtcars[mtcars$cyl!= "6"]
mtcars2 <- mtcars[mtcars$cyl != "6"]
mtcars2 <- mtcars[cyl != "6"]
mtcars2 <- mtcars[mtcars$cyl != "6"]
mtcars2 <- mtcars[,mtcars$cyl != "6"]
mtcars2 <- mtcars[mtcars$cyl != "6",]
mtcars2
lm(mpg ~ factor(cyl) + wt, mtcars2)
lm(mpg ~ factor(cyl) + wt + cyl*wt, mtcars2)
lm(mpg ~ factor(cyl), mtcars2)
lm(mpg ~ factor(cyl) + wt + cyl*wt - 1, mtcars2)
39.57-23.868
lm(mpg ~ factor(cyl) + wt  - 1, mtcars2)
34.06-28.041
lm(mpg ~ factor(cyl) + wt , mtcars2)
lm(mpg[cyl!= "6"] ~ factor(cyl [cyl!= "6"]), mtcars )
lm(mpg[cyl!= "6"] ~ factor(cyl [cyl!= "6"]) + wt[cyl!= "6"], mtcars )
lm(mpg ~ factor(cyl) + wt, mtcars )
lm(mpg ~ factor(cyl), mtcars )
lm(mpg ~ factor(cyl)+ wt -1, mtcars )
fit <- lm(mpg ~ factor(cyl)+ wt -1, mtcars )
fitb <- lm(mpg ~ factor(cyl)+ wt , mtcars )
summary (fit)
summary (fitb)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
mtcars
mtcars?
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
q <- lm (x~y)
summary(q)
hat(q)
hatvalues(q)
cooks.distance(q)
q <- lm (y~x)
hatvalues(q)
dfbeta(q)
dfbetas(q)
mtcars
level
relevel
mtcars2 <- relevel(cyl = 8)
mtcars2 <- relevel(cyl == 8)
mtcars2 <- relevel(mtcars$cyl == 8)
mtcars2 <- relevel(mtcars$cyl, ref = "8")
mtcars2 <- relevel(mtcars$cyl,  "8")
mtcars2 <- relevel(factor(mtcars$cyl),  "8")
lm (mpg ~ mtcars2 + wt, mtcars)
fit8wt <- lm (mpg ~ mtcars2 + wt, mtcars)
fit8wt <- lm (mpg ~ mtcars2 , mtcars)
fit8wt <- lm (mpg ~ mtcars2 + wt, mtcars)
fit8 <- lm (mpg ~ mtcars2 , mtcars)
summary(fit8)$coef
summary(fit8wt)$coef
fit1 <- lm(mpg ~ cyl, mtcars)
fit2 <- update(mpg ~ cyl + wt, mtcars)
fit1 <- lm(mpg ~ factor(cyl), mtcars)
fit2 <- update(mpg ~ factor(cyl) + wt, mtcars)
anova(fit1,fit2)
summary(fit1)
summary(fit2)
fit2 <- update(mpg ~ factor(cyl) + wt, mtcars)
fit2 <- lm(mpg ~ factor(cyl) + wt, mtcars)
anova(fit1,fit2)
summary(fit2)
anova(fit2,fit1)
fit2 <- update(fit, mpg ~ factor(cyl) + wt, mtcars)
anova(fit2,fit1)
anova(fit1,fit2)
fit2
fit3 <- update(fit, mpg ~ factor(cyl) + wt, mtcars)
fit3
summary(fit3)
anova(fit1,fit2\3)
anova(fit1,fit3)
anova(fit3,fit1)
fit3 <- update(fit, mpg ~ factor(cyl) + factor*wt, mtcars)
fit3 <- update(fit, mpg ~ factor(cyl) + factor(cyl)*wt, mtcars)
fit3
anova (fit1, fit3)
fit3 <- update(fit, mpg ~ factor(cyl) + wt - 1)
summary(fit3)
fit1 <- update(fit, mpg ~ factor(cyl) - 1)
summary(fit3)
summary(fit1)
anova (fit1, fit3)
fit1 <- update(fit, mpg ~ factor(cyl) - 1)
fit1
fit3
fit3 <- update(fit, mpg ~ factor(cyl) + wt + factor(cyl)*wt - 1)
fit3
anova (fit1, fit3)
fit1 <- update(fit, mpg ~ factor(cyl) +wt - 1)
anova (fit1, fit3)
fit1 <- update(fit, mpg ~ factor(cyl) + wt )
fit3 <- update(fit, mpg ~ factor(cyl) + factor(cyl)*wt - 1)
anova (fit1, fit3)
summary(fit3)
fit3 <- update(fit, mpg ~ factor(cyl) + I(factor(cyl)*wt))
fit3 <- update(fit, mpg ~ factor(cyl) + I(cyl*wt))
anova (fit1, fit3)
fit3 <- update(fit, mpg ~ factor(cyl) + factor(cyl)*wt )
anova (fit1, fit3)
summary(fit3)
cat('<iframe src="fig/n1.html" width = 100%, heaight=600></iframe>')
cat('<iframe src="fig/n1.html" width = 100%, height=600></iframe>')
view(fig/n1.html)
view()
n1
n1 <- nplot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex== 'Male'))
require(rCharts)
n1 <- nplot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex== 'Male'))
require(shiny)
n1 <- nplot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex== 'Male'))
slidfy(index.Rmd)
require(slidify)
slidfy(index.Rmd)
slidify(index.Rmd)
data()
mpg
library(ggplot)
library(ggplot2)
mpg
names(mpg)
dim(mpg)
lm(hwy~factor(drv))
lm(hwy~factor(drv), mpg)
test <- lm(hwy~factor(drv), mpg)
summary(test)
names(mpg)
test <- lm(hwy~factor(drv)+factor(cyl), mpg)
summary(test)
test <- lm(hwy~factor(drv)+factor(cyl)+displ, mpg)
summary(test)
test <- lm(hwy~displ, mpg)
summary(test)
names(mpg)
mpg
women
state.name
state.abb
state.center
state.division
state.region
state.x&&
state.x77
sleep
msleep
precip
iris
euro.cross
discoveries
occupationalStatus
pressure
runapp
library(shiny)
runapp()
ls()
cd
cd()
load("~/Documents/Coursera_Data/DevolopingDataProducts/mydeck/index.Rmd")
load("~/Documents/Coursera_Data/DevolopingDataProducts/mydeck/index.Rmd")
shiny::runApp()
galton
lm (child~parent, galton)
fit <- lm (child~parent, galton)
summary(fit)
out1
uspop
state.x77
fit <- lm (Income~Grad, state.x77)
fit <- lm (Income~Grad, as.data.frame(state.x77))
names(state.x77)
state.x77
names(state.x770
ChickWeight
mssleep
msleep
DNase
stemp(lm.mtcars)
step(lm.mtcars)
mtcarslm <- lm(mpg~., data = mtcars)
slml <- step(mtcarslm)
slma$anova
slm1$anova
slml$anova
mtcarsfactor <- mtcars
mtcarsfactor
mtcarsfactor[2] <- as.factor(mtcarsfactor[2])
mtcarsfactor$cyl <- as.factor(mtcarsfactor$cyl)
mtcarsfactor$am <- as.factor(mtcarsfactor$am)
mtcarsfactor$vs <- as.factor(mtcarsfactor$vs)
mtcarsfactor$gear <- as.factor(mtcarsfactor$gear)
mtcarsfactor$carb <- as.factor(mtcarsfactor$carb)
mtcarslm <- lm(mpg~., data = mtcarsfactor)
slml <- step(mtcarslm)
slml$anova
slml
lm(formula = mpg ~ cyl + hp + wt + am, data = mtcarsfactor)
test <-lm(formula = mpg ~ cyl + hp + wt + am, data = mtcarsfactor)
test
summary(test)
summaryslml
summary(slml)
slml$anova
mtlm <- lm(mpg~., data = mtcars)
slml2 <- step(mtlm)
summary(slml2)
slml2$anova
summary(slml)
summary(slml2)
mtcars
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
diamonds
dim(diamonds)
names(diamonds)
d <-lm(price~caret, data = diamonds)
d <-lm(price~carat, data = diamonds)
summary(d)
d <-lm(price~., data = diamonds)
sd <- step(d)
summary(sd)
sd$anova
summary(d)
summary(sd)
summary d
names(diamond)
names(diamonds)
anova <- anova(lm(mpg ~ am, data = mtcars), lm(mpg ~ am + qsec, data = mtcars), lm(mpg ~ am + wt + qsec, data = mtcars))
cbind(anova[1], anova[2], anova[3], anova[4], anova[5], anova[6])
lm(mpg ~ am + qsec, data = mtcars)
lm(mpg ~ factor(am) + qsec, data = mtcars)
test <- lm(mpg ~ factor(am) + qsec, data = mtcars)
summary(test)
test <- lm(mpg ~ factor(am) + qsec + wt, data = mtcars)
summary(test)
test <- lm(mpg ~ qsec + wt, data = mtcars)
summary(test)
test <- lm(mpg ~ qsec + wt + factor(am), data = mtcars)
summary(test)
diamonds
d <-lm(price~carat, data = diamonds)
summary(d)
test <- lm(mpg ~ qsec + wt + factor(am), data = mtcars)
plot(test)
plot(d)
d <-lm(price~., data = diamonds)
sd <- step(d)
plot(sd)
d <-lm(price~cut+clarity+color+carat, data = diamonds)
plot(d)
stackloss?
?stackloss
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
knitr
library knitr
library (knitr)
knitr()
knit(AboutApp.Rmd)
cd
cd()
lcd()
dir()
knit(AboutApp.RMD)
knit(Instructions.Rmd)
knit('Instructions.Rmd')
dir
dir()
shiny::runApp()
knit('AboutApp.RMD')
shiny::runApp()
knit('Instructions.Rmd')
library(knit)
library(knitr)
knit('Instructions.Rmd')
knit2html('your_file.Rmd')
knit2html('Instructions.Rmd')
shiny::runApp()
shiny::runApp()
knit2html('AboutStackloss.Rmd')
shiny::runApp()
knit2html('AboutApp.Rmd')
shiny::runApp()
shiny::runApp()
airflow
stack.loss
stack.x
stackloss
names(stackloss)
stackloss
detach("package:datasets", unload=TRUE)
stackloss
library(datasets)
stackloss
lmsl <- lm(stackloss ~ Air.Flow + Water.Temp, data = stackloss)
names(stackloss)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
lmsl <- lm(stack.loss ~ Air.Flow + Water.Temp, data = stackloss)
userdata = data.frame(Air.Flow=72,  # wrap the parameters
Water.Temp=20)
output$predict <- renderPrint({
predict(lmsl, userdata, interval="predict")
predict(lmsl, userdata, interval="predict"
predict(lmsl, userdata, interval="predict")
shiny::runApp()
shiny::runApp()
shiny::runApp()
libary(ggally)
library(ggally)
library(GGally)
ggpairs(iris, colour = 'Species', alpha = 0.4)
ggpairs(stackloss, colour = 'Air.Flow', alpha = 0.4)
ggpairs(stackloss, colour = 'Water.Temp', alpha = 0.4)
ggpairs(stackloss, alpha = 0.4)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plot(lmsl)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
summary(lsml)
summary(stackloss)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
stackloss
summary(stackloss)
shiny::runApp()
shiny::runApp()
shiny::runApp()
library("slidify", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:slidify", unload=TRUE)
shiny::runApp()
shiny::runApp()
ggpairs(iris, colour='Species', alpha=0.4)
library(GGally)
ggpairs(iris, colour='Species', alpha=0.4)
ggpairs(stackloss, colour='Acid.Conc', alpha=0.4)
ggpairs(stackloss, colour='Acid.Conc.', alpha=0.4)
ggpairs(stackloss alpha=0.4)
ggpairs(stackloss, alpha=0.4)
ggpairs(stackloss, colours = Water.Temp,alpha=0.4)
ggpairs(stackloss, colours = "Water.Temp", alpha=0.4)
ggpairs(stackloss, colours = "Air.Flow", alpha=0.4)
ggpairs(stackloss, colours = "Air.Flow", alpha=0.4)
ggpairs(stackloss, colours = "Acid.Conc.", alpha=0.4)
ggpairs(stackloss)
ggpairs(stackloss,  alpha=0.3)
shiny::runApp()
summary(stackloss)
72-50
93-50/10
87-50
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dir()
author("ShinyAppPitch")
library(slidfy)
library(slidify)
author("ShinyAppPitch")
summary stackloss
summary (stackloss)
publish(title = 'Predicting Plant Efficiency with Stackloss', 'index.html', host = 'rpubs')
publish(title = 'Predicting Plant Efficiency with Stackloss', 'index.html', host = 'rpubs')
publish(title = 'Predicting Plant Efficiency with Stackloss', 'index.html', host = 'rpubs')
